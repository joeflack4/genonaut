"""drop_comfyui_generation_requests_table

Revision ID: 1db7203ecfa3
Revises: 9872ef1e50c3
Create Date: 2025-10-04 01:42:08.553923

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1db7203ecfa3'
down_revision: Union[str, Sequence[str], None] = '9872ef1e50c3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('cgr_prompt_fts_idx'), table_name='comfyui_generation_requests', postgresql_using='gin')
    op.drop_index(op.f('idx_comfyui_gen_completed_at_desc'), table_name='comfyui_generation_requests', postgresql_where='(completed_at IS NOT NULL)')
    op.drop_index(op.f('idx_comfyui_gen_created_at_desc'), table_name='comfyui_generation_requests')
    op.drop_index(op.f('idx_comfyui_gen_negative_prompt_gist'), table_name='comfyui_generation_requests', postgresql_ops={'negative_prompt': 'gist_trgm_ops'}, postgresql_using='gist')
    op.drop_index(op.f('idx_comfyui_gen_prompt_gist'), table_name='comfyui_generation_requests', postgresql_ops={'prompt': 'gist_trgm_ops'}, postgresql_using='gist')
    op.drop_index(op.f('idx_comfyui_gen_status_created'), table_name='comfyui_generation_requests')
    op.drop_index(op.f('idx_comfyui_gen_status_created_priority'), table_name='comfyui_generation_requests', postgresql_where="((status)::text = ANY ((ARRAY['pending'::character varying, 'processing'::character varying])::text[]))")
    op.drop_index(op.f('idx_comfyui_gen_user_created'), table_name='comfyui_generation_requests')
    op.drop_index(op.f('idx_comfyui_gen_user_status_created'), table_name='comfyui_generation_requests')
    op.drop_index(op.f('ix_comfyui_generation_requests_comfyui_prompt_id'), table_name='comfyui_generation_requests')
    op.drop_index(op.f('ix_comfyui_generation_requests_status'), table_name='comfyui_generation_requests')
    op.drop_index(op.f('ix_comfyui_generation_requests_user_id'), table_name='comfyui_generation_requests')
    op.drop_table('comfyui_generation_requests')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comfyui_generation_requests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('prompt', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('negative_prompt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('checkpoint_model', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('lora_models', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('batch_size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sampler_params', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('comfyui_prompt_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('output_paths', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('thumbnail_paths', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('comfyui_generation_requests_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('comfyui_generation_requests_pkey'))
    )
    op.create_index(op.f('ix_comfyui_generation_requests_user_id'), 'comfyui_generation_requests', ['user_id'], unique=False)
    op.create_index(op.f('ix_comfyui_generation_requests_status'), 'comfyui_generation_requests', ['status'], unique=False)
    op.create_index(op.f('ix_comfyui_generation_requests_comfyui_prompt_id'), 'comfyui_generation_requests', ['comfyui_prompt_id'], unique=True)
    op.create_index(op.f('idx_comfyui_gen_user_status_created'), 'comfyui_generation_requests', ['user_id', 'status', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_comfyui_gen_user_created'), 'comfyui_generation_requests', ['user_id', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_comfyui_gen_status_created_priority'), 'comfyui_generation_requests', ['status', 'created_at'], unique=False, postgresql_where="((status)::text = ANY ((ARRAY['pending'::character varying, 'processing'::character varying])::text[]))")
    op.create_index(op.f('idx_comfyui_gen_status_created'), 'comfyui_generation_requests', ['status', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_comfyui_gen_prompt_gist'), 'comfyui_generation_requests', ['prompt'], unique=False, postgresql_ops={'prompt': 'gist_trgm_ops'}, postgresql_using='gist')
    op.create_index(op.f('idx_comfyui_gen_negative_prompt_gist'), 'comfyui_generation_requests', ['negative_prompt'], unique=False, postgresql_ops={'negative_prompt': 'gist_trgm_ops'}, postgresql_using='gist')
    op.create_index(op.f('idx_comfyui_gen_created_at_desc'), 'comfyui_generation_requests', [sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_comfyui_gen_completed_at_desc'), 'comfyui_generation_requests', [sa.literal_column('completed_at DESC')], unique=False, postgresql_where='(completed_at IS NOT NULL)')
    op.create_index(op.f('cgr_prompt_fts_idx'), 'comfyui_generation_requests', [sa.literal_column("to_tsvector('english'::regconfig, (COALESCE(prompt, ''::text) || ' '::text) || COALESCE(negative_prompt, ''::text))")], unique=False, postgresql_using='gin')
    # ### end Alembic commands ###
