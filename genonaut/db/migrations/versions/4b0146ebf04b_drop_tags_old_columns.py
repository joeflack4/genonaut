"""Drop tags_old columns

Revision ID: 4b0146ebf04b
Revises: 4f847fa892af
Create Date: 2025-10-13 04:18:36.482361

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4b0146ebf04b'
down_revision: Union[str, Sequence[str], None] = '4f847fa892af'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('content_items', 'tags',
               existing_type=postgresql.ARRAY(sa.UUID()),
               server_default=None,
               existing_nullable=False)
    op.drop_index(op.f('idx_content_items_tags_gin'), table_name='content_items', postgresql_using='gin')
    op.drop_column('content_items', 'tags_old')
    op.alter_column('content_items_auto', 'tags',
               existing_type=postgresql.ARRAY(sa.UUID()),
               server_default=None,
               existing_nullable=False)
    op.drop_index(op.f('idx_content_items_auto_tags_gin'), table_name='content_items_auto', postgresql_using='gin')
    op.drop_column('content_items_auto', 'tags_old')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('content_items_auto', sa.Column('tags_old', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_index(op.f('idx_content_items_auto_tags_gin'), 'content_items_auto', ['tags_old'], unique=False, postgresql_using='gin')
    op.alter_column('content_items_auto', 'tags',
               existing_type=postgresql.ARRAY(sa.UUID()),
               server_default=sa.text("'{}'::uuid[]"),
               existing_nullable=False)
    op.add_column('content_items', sa.Column('tags_old', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_index(op.f('idx_content_items_tags_gin'), 'content_items', ['tags_old'], unique=False, postgresql_using='gin')
    op.alter_column('content_items', 'tags',
               existing_type=postgresql.ARRAY(sa.UUID()),
               server_default=sa.text("'{}'::uuid[]"),
               existing_nullable=False)
    # ### end Alembic commands ###
