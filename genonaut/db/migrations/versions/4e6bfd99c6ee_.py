"""

Revision ID: 4e6bfd99c6ee
Revises: 5a60e1e257d3
Create Date: 2025-10-06 23:14:15.477307

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from genonaut.db.schema import JSONColumn


# revision identifiers, used by Alembic.
revision: str = '4e6bfd99c6ee'
down_revision: Union[str, Sequence[str], None] = '5a60e1e257d3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('models_checkpoints',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('path', sa.String(length=500), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('architecture', sa.String(length=100), nullable=True),
    sa.Column('family', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('tags', JSONColumn(), nullable=False),
    sa.Column('model_metadata', JSONColumn(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_checkpoint_description_gist', 'models_checkpoints', [sa.literal_column("to_tsvector('english', description)")], unique=False, postgresql_using='gist')
    op.create_index('idx_checkpoint_model_metadata_gin', 'models_checkpoints', ['model_metadata'], unique=False, postgresql_using='gin', postgresql_ops={'model_metadata': 'jsonb_path_ops'})
    op.create_index('idx_checkpoint_name_lower', 'models_checkpoints', [sa.literal_column('lower(name)')], unique=False)
    op.create_index('idx_checkpoint_rating_desc', 'models_checkpoints', [sa.literal_column('rating DESC')], unique=False)
    op.create_index('idx_checkpoint_tags_gin', 'models_checkpoints', ['tags'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_models_checkpoints_architecture'), 'models_checkpoints', ['architecture'], unique=False)
    op.create_index(op.f('ix_models_checkpoints_family'), 'models_checkpoints', ['family'], unique=False)
    op.create_index(op.f('ix_models_checkpoints_path'), 'models_checkpoints', ['path'], unique=True)
    op.create_index(op.f('ix_models_checkpoints_rating'), 'models_checkpoints', ['rating'], unique=False)
    op.create_table('models_loras',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('path', sa.String(length=500), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('compatible_architectures', sa.String(length=255), nullable=True),
    sa.Column('family', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('tags', JSONColumn(), nullable=False),
    sa.Column('trigger_words', JSONColumn(), nullable=False),
    sa.Column('optimal_checkpoints', JSONColumn(), nullable=False),
    sa.Column('model_metadata', JSONColumn(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_lora_description_gist', 'models_loras', [sa.literal_column("to_tsvector('english', description)")], unique=False, postgresql_using='gist')
    op.create_index('idx_lora_model_metadata_gin', 'models_loras', ['model_metadata'], unique=False, postgresql_using='gin', postgresql_ops={'model_metadata': 'jsonb_path_ops'})
    op.create_index('idx_lora_name_lower', 'models_loras', [sa.literal_column('lower(name)')], unique=False)
    op.create_index('idx_lora_optimal_checkpoints_gin', 'models_loras', ['optimal_checkpoints'], unique=False, postgresql_using='gin')
    op.create_index('idx_lora_rating_desc', 'models_loras', [sa.literal_column('rating DESC')], unique=False)
    op.create_index('idx_lora_tags_gin', 'models_loras', ['tags'], unique=False, postgresql_using='gin')
    op.create_index('idx_lora_trigger_words_gin', 'models_loras', ['trigger_words'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_models_loras_compatible_architectures'), 'models_loras', ['compatible_architectures'], unique=False)
    op.create_index(op.f('ix_models_loras_family'), 'models_loras', ['family'], unique=False)
    op.create_index(op.f('ix_models_loras_path'), 'models_loras', ['path'], unique=True)
    op.create_index(op.f('ix_models_loras_rating'), 'models_loras', ['rating'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_models_loras_rating'), table_name='models_loras')
    op.drop_index(op.f('ix_models_loras_path'), table_name='models_loras')
    op.drop_index(op.f('ix_models_loras_family'), table_name='models_loras')
    op.drop_index(op.f('ix_models_loras_compatible_architectures'), table_name='models_loras')
    op.drop_index('idx_lora_trigger_words_gin', table_name='models_loras', postgresql_using='gin')
    op.drop_index('idx_lora_tags_gin', table_name='models_loras', postgresql_using='gin')
    op.drop_index('idx_lora_rating_desc', table_name='models_loras')
    op.drop_index('idx_lora_optimal_checkpoints_gin', table_name='models_loras', postgresql_using='gin')
    op.drop_index('idx_lora_name_lower', table_name='models_loras')
    op.drop_index('idx_lora_model_metadata_gin', table_name='models_loras', postgresql_using='gin', postgresql_ops={'model_metadata': 'jsonb_path_ops'})
    op.drop_index('idx_lora_description_gist', table_name='models_loras', postgresql_using='gist')
    op.drop_table('models_loras')
    op.drop_index(op.f('ix_models_checkpoints_rating'), table_name='models_checkpoints')
    op.drop_index(op.f('ix_models_checkpoints_path'), table_name='models_checkpoints')
    op.drop_index(op.f('ix_models_checkpoints_family'), table_name='models_checkpoints')
    op.drop_index(op.f('ix_models_checkpoints_architecture'), table_name='models_checkpoints')
    op.drop_index('idx_checkpoint_tags_gin', table_name='models_checkpoints', postgresql_using='gin')
    op.drop_index('idx_checkpoint_rating_desc', table_name='models_checkpoints')
    op.drop_index('idx_checkpoint_name_lower', table_name='models_checkpoints')
    op.drop_index('idx_checkpoint_model_metadata_gin', table_name='models_checkpoints', postgresql_using='gin', postgresql_ops={'model_metadata': 'jsonb_path_ops'})
    op.drop_index('idx_checkpoint_description_gist', table_name='models_checkpoints', postgresql_using='gist')
    op.drop_table('models_checkpoints')
    # ### end Alembic commands ###
