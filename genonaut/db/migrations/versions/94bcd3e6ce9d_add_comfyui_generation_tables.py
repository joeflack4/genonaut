"""Add ComfyUI generation tables

Revision ID: 94bcd3e6ce9d
Revises: cad9b90762d9
Create Date: 2025-09-25 03:54:30.738520

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from genonaut.db.schema import JSONColumn


# revision identifiers, used by Alembic.
revision: str = '94bcd3e6ce9d'
down_revision: Union[str, Sequence[str], None] = 'cad9b90762d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('available_models',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_path'),
    sa.UniqueConstraint('name', 'type', name='uq_model_name_type')
    )
    op.create_index('idx_available_models_active_name', 'available_models', ['is_active', 'name'], unique=False)
    op.create_index('idx_available_models_type_active', 'available_models', ['type', 'is_active'], unique=False)
    op.create_index(op.f('ix_available_models_is_active'), 'available_models', ['is_active'], unique=False)
    op.create_index(op.f('ix_available_models_name'), 'available_models', ['name'], unique=False)
    op.create_index(op.f('ix_available_models_type'), 'available_models', ['type'], unique=False)
    op.create_table('comfyui_generation_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('negative_prompt', sa.Text(), nullable=True),
    sa.Column('checkpoint_model', sa.String(length=255), nullable=False),
    sa.Column('lora_models', JSONColumn(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('batch_size', sa.Integer(), nullable=False),
    sa.Column('sampler_params', JSONColumn(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('comfyui_prompt_id', sa.String(length=255), nullable=True),
    sa.Column('output_paths', JSONColumn(), nullable=True),
    sa.Column('thumbnail_paths', JSONColumn(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('cgr_prompt_fts_idx', 'comfyui_generation_requests', [sa.literal_column("to_tsvector('english', coalesce(prompt, '') || ' ' || coalesce(negative_prompt, ''))")], unique=False, postgresql_using='gin')
    op.create_index('idx_comfyui_gen_completed_at_desc', 'comfyui_generation_requests', [sa.literal_column('completed_at DESC')], unique=False, postgresql_where=sa.text('completed_at IS NOT NULL'))
    op.create_index('idx_comfyui_gen_created_at_desc', 'comfyui_generation_requests', [sa.literal_column('created_at DESC')], unique=False)
    op.create_index('idx_comfyui_gen_status_created', 'comfyui_generation_requests', ['status', sa.literal_column('created_at DESC')], unique=False)
    op.create_index('idx_comfyui_gen_status_created_priority', 'comfyui_generation_requests', ['status', sa.literal_column('created_at ASC')], unique=False, postgresql_where=sa.text("status IN ('pending', 'processing')"))
    op.create_index('idx_comfyui_gen_user_created', 'comfyui_generation_requests', ['user_id', sa.literal_column('created_at DESC')], unique=False)
    op.create_index('idx_comfyui_gen_user_status_created', 'comfyui_generation_requests', ['user_id', 'status', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('ix_comfyui_generation_requests_comfyui_prompt_id'), 'comfyui_generation_requests', ['comfyui_prompt_id'], unique=True)
    op.create_index(op.f('ix_comfyui_generation_requests_status'), 'comfyui_generation_requests', ['status'], unique=False)
    op.create_index(op.f('ix_comfyui_generation_requests_user_id'), 'comfyui_generation_requests', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_comfyui_generation_requests_user_id'), table_name='comfyui_generation_requests')
    op.drop_index(op.f('ix_comfyui_generation_requests_status'), table_name='comfyui_generation_requests')
    op.drop_index(op.f('ix_comfyui_generation_requests_comfyui_prompt_id'), table_name='comfyui_generation_requests')
    op.drop_index('idx_comfyui_gen_user_status_created', table_name='comfyui_generation_requests')
    op.drop_index('idx_comfyui_gen_user_created', table_name='comfyui_generation_requests')
    op.drop_index('idx_comfyui_gen_status_created_priority', table_name='comfyui_generation_requests', postgresql_where=sa.text("status IN ('pending', 'processing')"))
    op.drop_index('idx_comfyui_gen_status_created', table_name='comfyui_generation_requests')
    op.drop_index('idx_comfyui_gen_created_at_desc', table_name='comfyui_generation_requests')
    op.drop_index('idx_comfyui_gen_completed_at_desc', table_name='comfyui_generation_requests', postgresql_where=sa.text('completed_at IS NOT NULL'))
    op.drop_index('cgr_prompt_fts_idx', table_name='comfyui_generation_requests', postgresql_using='gin')
    op.drop_table('comfyui_generation_requests')
    op.drop_index(op.f('ix_available_models_type'), table_name='available_models')
    op.drop_index(op.f('ix_available_models_name'), table_name='available_models')
    op.drop_index(op.f('ix_available_models_is_active'), table_name='available_models')
    op.drop_index('idx_available_models_type_active', table_name='available_models')
    op.drop_index('idx_available_models_active_name', table_name='available_models')
    op.drop_table('available_models')
    # ### end Alembic commands ###
