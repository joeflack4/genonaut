"""add_flagged_content_table

Revision ID: a6a977e00640
Revises: 09c47c15d4b1
Create Date: 2025-10-01 00:34:35.407762

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from genonaut.db.schema import JSONColumn


# revision identifiers, used by Alembic.
revision: str = 'a6a977e00640'
down_revision: Union[str, Sequence[str], None] = '09c47c15d4b1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flagged_content',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content_item_id', sa.Integer(), nullable=True),
    sa.Column('content_item_auto_id', sa.Integer(), nullable=True),
    sa.Column('content_source', sa.String(length=20), nullable=False),
    sa.Column('flagged_text', sa.Text(), nullable=False),
    sa.Column('flagged_words', JSONColumn(), nullable=False),
    sa.Column('total_problem_words', sa.Integer(), nullable=False),
    sa.Column('total_words', sa.Integer(), nullable=False),
    sa.Column('problem_percentage', sa.Float(), nullable=False),
    sa.Column('risk_score', sa.Float(), nullable=False),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.Column('flagged_at', sa.DateTime(), nullable=False),
    sa.Column('reviewed', sa.Boolean(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by', sa.UUID(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['content_item_auto_id'], ['content_items_auto.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['content_item_id'], ['content_items.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_flagged_content_creator_flagged', 'flagged_content', ['creator_id', sa.literal_column('flagged_at DESC')], unique=False)
    op.create_index('idx_flagged_content_flagged_at_desc', 'flagged_content', [sa.literal_column('flagged_at DESC')], unique=False)
    op.create_index('idx_flagged_content_reviewed_flagged', 'flagged_content', ['reviewed', sa.literal_column('flagged_at DESC')], unique=False)
    op.create_index('idx_flagged_content_risk_flagged', 'flagged_content', [sa.literal_column('risk_score DESC'), sa.literal_column('flagged_at DESC')], unique=False)
    op.create_index('idx_flagged_content_risk_score_desc', 'flagged_content', [sa.literal_column('risk_score DESC')], unique=False)
    op.create_index('idx_flagged_content_source_flagged', 'flagged_content', ['content_source', sa.literal_column('flagged_at DESC')], unique=False)
    op.create_index('idx_flagged_content_unreviewed_high_risk', 'flagged_content', [sa.literal_column('risk_score DESC')], unique=False, postgresql_where=sa.text('reviewed = false'))
    op.create_index('idx_flagged_content_words_gin', 'flagged_content', ['flagged_words'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_flagged_content_content_item_auto_id'), 'flagged_content', ['content_item_auto_id'], unique=False)
    op.create_index(op.f('ix_flagged_content_content_item_id'), 'flagged_content', ['content_item_id'], unique=False)
    op.create_index(op.f('ix_flagged_content_content_source'), 'flagged_content', ['content_source'], unique=False)
    op.create_index(op.f('ix_flagged_content_creator_id'), 'flagged_content', ['creator_id'], unique=False)
    op.create_index(op.f('ix_flagged_content_reviewed'), 'flagged_content', ['reviewed'], unique=False)
    op.drop_index(op.f('cgr_prompt_fts_idx'), table_name='comfyui_generation_requests', postgresql_using='gin')
    op.create_index('cgr_prompt_fts_idx', 'comfyui_generation_requests', [sa.literal_column("to_tsvector('english', coalesce(prompt, '') || ' ' || coalesce(negative_prompt, ''))")], unique=False, postgresql_using='gin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('cgr_prompt_fts_idx', table_name='comfyui_generation_requests', postgresql_using='gin')
    op.create_index(op.f('cgr_prompt_fts_idx'), 'comfyui_generation_requests', [sa.literal_column("to_tsvector('english'::regconfig, (COALESCE(prompt, ''::text) || ' '::text) || COALESCE(negative_prompt, ''::text))")], unique=False, postgresql_using='gin')
    op.drop_index(op.f('ix_flagged_content_reviewed'), table_name='flagged_content')
    op.drop_index(op.f('ix_flagged_content_creator_id'), table_name='flagged_content')
    op.drop_index(op.f('ix_flagged_content_content_source'), table_name='flagged_content')
    op.drop_index(op.f('ix_flagged_content_content_item_id'), table_name='flagged_content')
    op.drop_index(op.f('ix_flagged_content_content_item_auto_id'), table_name='flagged_content')
    op.drop_index('idx_flagged_content_words_gin', table_name='flagged_content', postgresql_using='gin')
    op.drop_index('idx_flagged_content_unreviewed_high_risk', table_name='flagged_content', postgresql_where=sa.text('reviewed = false'))
    op.drop_index('idx_flagged_content_source_flagged', table_name='flagged_content')
    op.drop_index('idx_flagged_content_risk_score_desc', table_name='flagged_content')
    op.drop_index('idx_flagged_content_risk_flagged', table_name='flagged_content')
    op.drop_index('idx_flagged_content_reviewed_flagged', table_name='flagged_content')
    op.drop_index('idx_flagged_content_flagged_at_desc', table_name='flagged_content')
    op.drop_index('idx_flagged_content_creator_flagged', table_name='flagged_content')
    op.drop_table('flagged_content')
    # ### end Alembic commands ###
