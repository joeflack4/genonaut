"""

Revision ID: c6022f496402
Revises: bd75737333d5
Create Date: 2025-10-18 11:12:32.919503

Notes:
- it autogenerated stuff but i was getting an err and had to change it to manual (https://chatgpt.com/g/g-p-68f1d7b5c86c819183c4578c779d151c/c/68ca0c52-7c18-8321-8689-fc5350351e25)

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c6022f496402'
down_revision: Union[str, Sequence[str], None] = 'bd75737333d5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

PK_TABLES = [
    # ("content_tags", "content_tags_id_seq"),
    ("generation_jobs", "generation_jobs_id_seq"),
]

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column('generation_jobs', 'id',
    #            existing_type=sa.INTEGER(),
    #            server_default=sa.Identity(always=False),
    #            existing_nullable=False,
    #            autoincrement=True)
    # ### end Alembic commands ###


    # ### manually added ###
    # remove any autogenerated op.alter_column(...) calls first
    for table, old_seq in PK_TABLES:
        op.execute(f"ALTER TABLE {table} ALTER COLUMN id DROP DEFAULT;")
        op.execute(f"ALTER TABLE {table} ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;")
        # ensure next value > current max(id)
        op.execute(
            f"SELECT setval(pg_get_serial_sequence('{table}', 'id'), "
            f"COALESCE((SELECT MAX(id) FROM {table}), 0) + 1, false);"
        )
        op.execute(f"DROP SEQUENCE IF EXISTS {old_seq};")
    # ### end manually added ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column('generation_jobs', 'id',
    #            existing_type=sa.INTEGER(),
    #            server_default=None,
    #            existing_nullable=False,
    #            autoincrement=True)
    # ### end Alembic commands ###

    # ### manually added ###
    # remove identity and recreate a classic serial-style default
    for table, old_seq in PK_TABLES:
        op.execute(f"ALTER TABLE {table} ALTER COLUMN id DROP IDENTITY IF EXISTS;")
        op.execute(f"CREATE SEQUENCE IF NOT EXISTS {old_seq} OWNED BY {table}.id;")
        op.execute(
            f"SELECT setval('{old_seq}', COALESCE((SELECT MAX(id) FROM {table}), 0) + 1, false);"
        )
        op.execute(f"ALTER TABLE {table} ALTER COLUMN id SET DEFAULT nextval('{old_seq}');")
    # ### end manually added ###
